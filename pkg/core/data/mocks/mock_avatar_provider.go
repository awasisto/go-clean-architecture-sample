// Code generated by MockGen. DO NOT EDIT.
// Source: avatar_provider.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAvatarProvider is a mock of AvatarProvider interface
type MockAvatarProvider struct {
	ctrl     *gomock.Controller
	recorder *MockAvatarProviderMockRecorder
}

// MockAvatarProviderMockRecorder is the mock recorder for MockAvatarProvider
type MockAvatarProviderMockRecorder struct {
	mock *MockAvatarProvider
}

// NewMockAvatarProvider creates a new mock instance
func NewMockAvatarProvider(ctrl *gomock.Controller) *MockAvatarProvider {
	mock := &MockAvatarProvider{ctrl: ctrl}
	mock.recorder = &MockAvatarProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAvatarProvider) EXPECT() *MockAvatarProviderMockRecorder {
	return m.recorder
}

// GetAvatarUrlByEmail mocks base method
func (m *MockAvatarProvider) GetAvatarUrlByEmail(email string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAvatarUrlByEmail", email)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAvatarUrlByEmail indicates an expected call of GetAvatarUrlByEmail
func (mr *MockAvatarProviderMockRecorder) GetAvatarUrlByEmail(email interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAvatarUrlByEmail", reflect.TypeOf((*MockAvatarProvider)(nil).GetAvatarUrlByEmail), email)
}
